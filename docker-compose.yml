version: '2'

services:

  postgres:
    restart: unless-stopped
    container_name: postgres
    image: postgres:latest
    volumes_from:
      - data
    volumes:
      #- ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - backups-postgresql:/backup
    env_file:
      - .env
    # expose:
    # - "5432"

  data:
    restart: unless-stopped
    container_name: data
    image: alpine
    volumes:
      - postgres-database:/var/lib/postgresql/data/pgdata
    command: "true"

  web:
    # reminder to migrate sudo docker-compose run web /data/web/manage.py migrate
    # reminder to collecstatics sudo docker-compose run web /data/web/manage.py collectstatic
    restart: unless-stopped
    container_name: djangominimal
    env_file: .env
    build: ./web
    # command: bash -c "while ! nc -w 1 -z postgres 5432; do sleep 0.1; done; ./manage.py migrate; while :; do ./manage.py runserver 0.0.0.0:8000; sleep 1; done"
    command:  bash -c "python manage.py makemigrations && python manage.py migrate && gunicorn djangominimal.wsgi:application -w 2 -b :8000"
#    environment:
#      - VIRTUAL_PROTO=https
    ports:
      - "8000:8000"
    volumes:
      - ./web:/data/web
      - www-static:/data/static
    depends_on:
      - postgres

  nginx-proxy:
    restart: unless-stopped
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    build: ./nginx/
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /www/static
#      - /srv/docker/nginx/certs:/etc/nginx/certs:ro
#      - /var/run/docker.sock:/tmp/docker.sock:ro
    volumes_from:
      - web
    links:
      - web:web

volumes:
    backups-postgresql:
    postgres-database:
    www-static:
    data:
